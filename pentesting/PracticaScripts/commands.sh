#!/bin/bash

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

function ctrl_c(){
  echo -e "\n${redColour}[!]${endColour} ${grayColour}Quiting...${endColour}\n"
  exit 1 
}

trap ctrl_c INT

function help_panel(){
  echo -e "\n${purpleColour}[i]${endColour} ${grayColour}Usage:${endColour}\n"
  echo -e "\t${yellowColour}[*]${enColour}${grayColour} $0 -c ${yellowColour}<${endColour}${purpleColour}technology${endColour}${yellowColour}>${endColour}${endColour} ${yellowColour}--->${endColour} ${grayColour}Know some commands about a technology${endColour}\n"
  echo -e "\t${redColour}[!]${endColour} ${grayColour}Available technologies${endColour}${redColour}:${endColour}"
  echo -e "\t${redColour}-${endColour} ${grayColour}git${endColour}"
}

function commands(){ 
  if [ "$1" == "git" ]; then
    echo -e "\n${turquoiseColour}[i]${endColour} ${yellowColour}$1${endColour}${grayColour} commands${endColour}${turquoiseColour}:${endColour} \n"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}init${endColour} ${yellowColour}----------------------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Initialize a git repository.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}clone${endColour} ${purpleColour}{repository_url}${endColour} ${yellowColour}----------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Clone the repository hosted at the url.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}status${endColour} ${yellowColour}--------------------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Check the status of the repository.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}add${endColour} ${purpleColour}{file_to_add}${endColour} ${yellowColour}---------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Add trace to indicated file.${endColour} ${turquoiseColour}(${endColour}${grayColour}With a . we would add traces to all changed files${endColour}${turquoiseColour})${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}commit${endColour} ${turquoiseColour}-m${endColour} ${purpleColour}{message_to_save_change}${endColour} ${yellowColour}----->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Add changes to save under a descriptive name.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}push${endColour} ${purpleColour}{url_or_branch}${endColour} ${yellowColour}------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Update the branch with the changes previously commited.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}checkout${endColour} ${purpleColour}{branch_name}${endColour} ${yellowColour}----------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Switch to an existing branch.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}checkout${endColour} ${turquoiseColour}-b${endColour} ${purpleColour}{branch_name}${endColour} ${yellowColour}-------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Create a branch and switch.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}branch${endColour} ${yellowColour}--------------------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}See local branches.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}branch${endColour} ${turquoiseColour}-a${endColour} ${yellowColour}------------------------------>${endColour} ${turquoiseColour}i)${endColour} ${grayColour}View existing branches in the repository.${endColour}"  
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}branch${endColour} ${turquoiseColour}-D${endColour} ${purpleColour}{branch_name}${endColour} ${yellowColour}---------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Delete a local branch.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}log${endColour} ${yellowColour}------------------------------------>${endColour} ${turquoiseColour}i)${endColour} ${grayColour}View commit history.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}show${endColour} ${purpleColour}{commit_id}${endColour} ${yellowColour}----------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}View the changes made in that commit.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}checkout${endColour} ${purpleColour}{commit_id}${endColour} ${yellowColour}------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Return to the project state of that commit.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}reset${endColour} ${turquoiseColour}--hard${endColour} ${purpleColour}HEAD^${endColour} ${yellowColour}--------------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Remove the last commit.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}reset${endColour} ${turquoiseColour}--hard${endColour} ${purpleColour}HEAD~{num}${endColour} ${yellowColour}---------------->${endColour} ${turquoiseColour}i)${endColour} ${grayColour}Remove the last {num} commits entered.${endColour}" 
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}tag${endColour} ${yellowColour}------------------------------------>${endColour} ${turquoiseColour}i)${endColour} ${grayColour}View points in the history of a branch that persists unchanged.${endColour}"
    echo -e "\t ${turquoiseColour}-${endColour} ${yellowColour}git${endColour} ${grayColour}show${endColour} ${purpleColour}{tag_name}${endColour} ${yellowColour}------------------------>${endColour} ${turquoiseColour}i)${endColour} ${grayColour}View the tag selected.${endColour}"
  fi
}


declare -i selector=0

while getopts "c:h" arg;do 
  case $arg in
    c) tech=$OPTARG; let selector+=1;;
    h) ;;
  esac
done

if [ $selector -eq 1 ]; then
  commands $tech
else
  help_panel
fi
